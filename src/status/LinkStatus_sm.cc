/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : LinkStatus.sm
 */

#include "LinkStatus.h"
#include "LinkStatus_sm.h"

using namespace statemap;

// Static class declarations.
LinkStatusMap_PluggedIn LinkStatusMap::PluggedIn("LinkStatusMap::PluggedIn", 0);
LinkStatusMap_Unplugging LinkStatusMap::Unplugging("LinkStatusMap::Unplugging", 1);
LinkStatusMap_Unplugged LinkStatusMap::Unplugged("LinkStatusMap::Unplugged", 2);
LinkStatusMap_PluggingIn LinkStatusMap::PluggingIn("LinkStatusMap::PluggingIn", 3);

void LinkStatusDataState::EndPluggingIn(LinkStatusContext& context)
{
    Default(context);
    return;
}

void LinkStatusDataState::EndUnplugging(LinkStatusContext& context)
{
    Default(context);
    return;
}

void LinkStatusDataState::StartPluggingIn(LinkStatusContext& context)
{
    Default(context);
    return;
}

void LinkStatusDataState::StartUnplugging(LinkStatusContext& context)
{
    Default(context);
    return;
}

void LinkStatusDataState::Default(LinkStatusContext& context)
{
    throw (
        TransitionUndefinedException(
            context.getState().getName(),
            context.getTransition()));

    return;
}

void LinkStatusMap_PluggedIn::StartUnplugging(LinkStatusContext& context)
{

    (context.getState()).Exit(context);
    context.setState(LinkStatusMap::Unplugging);
    (context.getState()).Entry(context);

    return;
}

void LinkStatusMap_Unplugging::EndUnplugging(LinkStatusContext& context)
{

    (context.getState()).Exit(context);
    context.setState(LinkStatusMap::Unplugged);
    (context.getState()).Entry(context);

    return;
}

void LinkStatusMap_Unplugged::StartPluggingIn(LinkStatusContext& context)
{

    (context.getState()).Exit(context);
    context.setState(LinkStatusMap::PluggingIn);
    (context.getState()).Entry(context);

    return;
}

void LinkStatusMap_PluggingIn::EndPluggingIn(LinkStatusContext& context)
{

    (context.getState()).Exit(context);
    context.setState(LinkStatusMap::PluggedIn);
    (context.getState()).Entry(context);

    return;
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
